{"remainingRequest":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\angular-router-loader\\src\\index.js!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\tslint-loader\\index.js!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","dependencies":[{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","mtime":1557678460017},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar login_service_1 = require(\"app/core/login/login.service\");\r\nvar AuthExpiredInterceptor = /** @class */ (function () {\r\n    function AuthExpiredInterceptor(loginService) {\r\n        this.loginService = loginService;\r\n    }\r\n    AuthExpiredInterceptor.prototype.intercept = function (request, next) {\r\n        var _this = this;\r\n        return next.handle(request).pipe(operators_1.tap(function (event) { }, function (err) {\r\n            if (err instanceof http_1.HttpErrorResponse) {\r\n                if (err.status === 401) {\r\n                    _this.loginService.logout();\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    var _a;\r\n    AuthExpiredInterceptor = tslib_1.__decorate([\r\n        core_1.Injectable(),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof login_service_1.LoginService !== \"undefined\" && login_service_1.LoginService) === \"function\" ? _a : Object])\r\n    ], AuthExpiredInterceptor);\r\n    return AuthExpiredInterceptor;\r\n}());\r\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\r\n",{"version":3,"file":"C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","sourceRoot":"","sources":["C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\angular-router-loader\\src\\index.js!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\node_modules\\tslint-loader\\index.js!C:\\lab\\jhipster\\BookingApp\\TwentyOnePoints\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAA+G;AAE/G,4CAAqC;AACrC,8DAA4D;AAG5D;IACI,gCAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,0CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAaC;QAZG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,eAAG,CACC,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,IAAI,GAAG,YAAY,wBAAiB,EAAE;gBAClC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACpB,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACJ;QACL,CAAC,CACJ,CACJ,CAAC;IACN,CAAC;;IAhBQ,sBAAsB;QADlC,iBAAU,EAAE;qEAEyB,4BAAY,oBAAZ,4BAAY;OADrC,sBAAsB,CAiBlC;IAAD,6BAAC;CAAA,AAjBD,IAiBC;AAjBY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LoginService } from 'app/core/login/login.service';\n\n@Injectable()\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n    constructor(private loginService: LoginService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            tap(\n                (event: HttpEvent<any>) => {},\n                (err: any) => {\n                    if (err instanceof HttpErrorResponse) {\n                        if (err.status === 401) {\n                            this.loginService.logout();\n                        }\n                    }\n                }\n            )\n        );\n    }\n}\n"]}]}